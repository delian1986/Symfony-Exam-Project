<?php

namespace ShopBundle\Repository;

use Doctrine\ORM\EntityManagerInterface;
use ShopBundle\Entity\Category;
use ShopBundle\Entity\Product;

/**
 * ProductRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProductRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * @param EntityManagerInterface $em
     */

    public function __construct(EntityManagerInterface $em)
    {
        parent::__construct($em, new \Doctrine\ORM\Mapping\ClassMetadata(Product::class));
    }

    public function findAllInStock(){
        $q = $this->createQueryBuilder('p')
            ->where('p.isListed = :isListed')
            ->setParameter('isListed', 1)
            ->getQuery();

        return $q->getResult();
    }

    /**
     * @param Product $product
     * @throws \Doctrine\ORM\ORMException
     * @throws \Doctrine\ORM\OptimisticLockException
     */
    public function save(Product $product):void {
        $this->_em->persist($product);
        $this->_em->flush();
    }

    public function findAllbyCategoryQueryBuilder(Category $category)
    {
        return $this->createQueryBuilder('product')
            ->where('product.isListed = 1')
            ->andWhere('product.category = :category')
            ->orderBy('product.id', 'desc')
            ->setParameter('category', $category);
    }

    public function findAllTopSellers(){
        $q = $this->createQueryBuilder('p')
            ->where('p.isListed = :isListed')
            ->setParameter('isListed', 1)
            ->orderBy('p.soldTimes','DESC')
            ->setMaxResults(3)
            ->getQuery();

        return $q->getResult();
    }

    public function findAllByQueryBuilder()
    {
        return $this->createQueryBuilder('product')
            ->orderBy('product.id', 'desc');
    }

    public function findAllAvailableByQueryBuilder()
    {
        return $this->createQueryBuilder('product')
            ->where('product.isListed = 1')
            ->orderBy('product.id', 'desc');
    }



}
